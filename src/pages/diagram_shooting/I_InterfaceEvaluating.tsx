import React, { useState } from 'react';
import { inject } from 'mobx-react';
import IExperimentController from './ExperimentControllerInterface';
import styles from './Windows.module.css';

interface IProps {
	controller?: IExperimentController;
	nextFunc: () => any,
}

const FirstInterfaceEvaluating = inject( 'controller' )( ( props: IProps ) => {
	const [page, setPage] = useState( 0 );
	return (
		<div className={styles.window}>
		{
		page === 0
		?
			<div>
				<div className={styles.content}>
					<h3>–®–∞–≥ 2 <span className={styles.steps}>–∏–∑ 4</span></h3>
					<p>
						–û–¥–∏–Ω –∏–∑ –¥–≤—É—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –í—ã –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–ª–∏.<br/>
						–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º–∏ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è–º–∏ –≤ –∞–Ω–∫–µ—Ç–µ –∏ –Ω–µ –∑–∞–±—É–¥—å—Ç–µ <span className={styles.important}>–Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É "–û—Ç–ø—Ä–∞–≤–∏—Ç—å"</span> üòâ
					</p>
					<script src="https://yastatic.net/s3/frontend/forms/_/embed.js"></script>
					<iframe
						className={styles.firstInterface}
						src={props.controller?.getFormURL( 'firstInterface' )}
						frameBorder="0"
						name="ya-form-615382e02f32d9ac52ac829d"
						title="first-interface">
					</iframe>
				</div>
				<div className={styles.btnContainer}>
					<button
					className={styles.nextBtn}
						type="button"
						onClick={() => {setPage(1)}} >
				
						–î–∞–ª–µ–µ
					</button>
				</div>
			</div>
		:
			<div>
				<div className={styles.content}>
					<h3>–®–∞–≥ 3 <span className={styles.steps}>–∏–∑ 4</span></h3>
					<p>
						–í—Ç–æ—Ä–æ–π –≤–∞—Ä–∏–∞–Ω—Ç, –≤—Ç–æ—Ä–æ–π —Ä–∞—É–Ω–¥.
					</p>
					<p className={styles.importantInfo}>
						<span className={styles.important}>–ó–∞–¥–∞—á–∞ —Ç–∞ –∂–µ:</span> –∫–∞–∫ –º–æ–∂–Ω–æ –±—ã—Å—Ç—Ä–µ–µ –ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ <span className={styles.important}>5¬†¬´–≤—ã—Å—Ç—Ä–µ–ª–æ–≤¬ª</span> –ø–æ¬†—Å—Ç—Ä–µ–ª–∫–∞–º.
					</p>
				</div>
				<div className={styles.btnContainer}>
				<button
						className={styles.prevBtn}
						type="button"
						onClick={() => {setPage(0)}} >
						
						–ù–∞–∑–∞–¥
					</button>
					<button
					className={styles.nextBtn}
						type="button"
						onClick={props.nextFunc} >
				
						–ü–æ–≥–Ω–∞–ª–∏!
					</button>
				</div>
			</div>
		}
		</div>
	);
} );

export default FirstInterfaceEvaluating;